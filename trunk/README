OpenRTDynamics v0.99d -- Real Time Dynamics Toolbox suitable for
                         implementing time discrete controllers 
                         using block schematics similar to to 
                         Simulink or Scicos. 

                         (openrtdynamics.sf.net)


OS Dependency
-------------

- Linux. Maybe other UNIX-like.
- Shouldn't be a problem to port to other OS
  or even embedded systems

License
-------

LGPL, see COPYING / COPYING.LESSER

Requirements
------------

Scilab 5 or above. The toolbox will only load with Scilab 5.3.0 at the moment 
                   (maybe a builder.sce problem?)
Scilab 4.1.2 also works, but the toolbox will not load. Manually loading
             the *sci is required.

Compile / Install
-----------------

Run "make install" on 32/64 linux platforms

this will compile libortd.so and libdyn_generic_exec, which is a generic 
schematic executor. Both are copied to /usr/local/[bin,lib] respectively.


The command

  make install_toolbox

will ask you for your Scilab 5 installation directory (where the package from the
Scilab Website was extracted) and installs the Scilab toolbox.

Alternatively, link or copy the the "ld_toolbox" directory (not only its contents) 
to your <scilab installation directory>/share/scilab/contrib .

HART-Module installation
------------------------

Link hart/hart_ortd to the modules/ directory of your HART-Toolbox. 
NOTE: Do not make a copy!

Tools
-----

- libdyn_generic_exec
    executes schematics in realtime (rt_preempt) OR as fast as possible
    Schematics are getting some dummy in and outputs
    type "libdyn_generic_exec --help" for help

Modules
-------

Modules are placed within the modules subdirectory. For now, you will find the
following:

- muparser: Evaluation of mathematical expressions
- rt_server: Remote control of your controller via an TCP-Interface (Experimental)
- nested: includind and switching of ORTD-Simulations within ORTD-Simulations
- basic_ldblocks: Basic Blocks (hysteresis, modulo counter, (de)multiplexer, 2to1 switch ...)
- template: A module template for creating your own blocks

Examples
--------

Examples can be found within the "examples" subdirectory.

For a ready to run example go into the examples directory via shell and type:

# sh sh_runoscillator

A second try could be to execute "simple_demo.sce" within scilab 5 or above. 
It will create *.[i,r]par files containing the schematic.
Ensure that you loaded the "ld_toolbox" at first. Then run the command 

# libdyn_generic_exec -s simple_demo -i 901 -l 100

within the "examples" directory. It will load the [i,r]par files, 
compile the schematic and start execution. This example will create
several “.dat” output files.

You can also use simple_demo.sce as a template.

Another example is pulsetest -- a realtime synthesiser, which uses pulseaudio.
Therefore, for compiling you need to install the pa-headers at first:

sudo apt-get install libpulse-dev

Run it with ./pulsetest and type “q” or “w” or “ESC”.

TODO
----

- Makefile (done)
- Better Documentation (the provided one is out of date)

- Wrapper block for backgroud computations for state updates
- nestet schematics (done)
- exchangable schematics (done)
- tcp server for remote control, parameter uploading ... (experimental)
- block interpreting math formula (done; with help of muParser)
- wrapper for scicos blocks and inclusion of hart toolbox
- a dynamical linker that loads *so files as it might be described
  within the schematics
- A matix module (multiplication, inversion ...)
- A Kalman Filter build with basic blocks
- ....

BUGS
----

- Transfer function blocks are limited by a order of max 20 for the given tf
  No error catching
- Objects created by libdyn_new_feedback can by ONLY used once
- Otherwise it works quite stable (Used for many controller implementations in medical
  control at TU-Berlin)

CONTACT
-------

Christian Klauer
Control Systems Group
TU-Berlin, Germany
Email: <klauer@control.tu-berlin.de>
Web: http://www.control.tu-berlin.de/User:Christian_Klauer


CHANGELOG
---------

11.4.11 (v0.99b)
  - small Bug within ld_const function
  - a new printf block

v0.99c
  - Makefile
  - better dokumentation

v0.99d
  - Nicer Scilab interface

v0.99e
  - Modules support
  - muParser (http://muparser.sourceforge.net/) Block support for using math formula within simulations
    there is an example within examples/muparser.sce
  - HART-module (hart.sf.net) for using ORTD in Scicos simulations
  - remote control interface via TCP to set parameters via a new "ld_parameter" block
    enable it in libdyn_generic_exec by the --master_tcpport <port> option
    an example can be found under examples/remote_control.sce
  - Scicos block for integration of ortd schematics
